name: Deploy Discord Bot to Railway

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install
    
    - name: Build project
      run: bun run build
    
    - name: Run tests
      run: bun test
      
  deploy:
    needs: test
    runs-on: ubuntu-latest
    # Only deploy on pushes to main branch (not PRs)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    # Use Railway's official CLI container for consistency
    container: ghcr.io/railwayapp/cli:latest
    
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
      CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
      TIMEZONE: ${{ secrets.TIMEZONE }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Verify Railway token
      run: |
        if [ -z "$RAILWAY_TOKEN" ]; then
          echo "❌ RAILWAY_TOKEN secret is not set"
          echo "Please add your Railway project token to GitHub repository secrets"
          exit 1
        fi
        echo "✅ Railway token is configured"

    - name: List Railway services
      run: |
        echo "🔍 Checking available Railway services..."
        railway service list || echo "⚠️ Could not list services, proceeding with deployment"

    - name: Set Railway Environment Variables
      run: |
        echo "🔧 Setting environment variables in Railway..."
        
        # Set environment variables in Railway for the main service
        if [ -n "$DISCORD_TOKEN" ]; then
          railway variables set DISCORD_TOKEN="$DISCORD_TOKEN" || echo "⚠️ Failed to set DISCORD_TOKEN"
          echo "✅ DISCORD_TOKEN set in Railway"
        else
          echo "⚠️ DISCORD_TOKEN not found in GitHub Secrets"
        fi
        
        if [ -n "$CHANNEL_ID" ]; then
          railway variables set CHANNEL_ID="$CHANNEL_ID" || echo "⚠️ Failed to set CHANNEL_ID"
          echo "✅ CHANNEL_ID set in Railway"
        else
          echo "⚠️ CHANNEL_ID not found in GitHub Secrets"
        fi
        
        if [ -n "$TIMEZONE" ]; then
          railway variables set TIMEZONE="$TIMEZONE" || echo "⚠️ Failed to set TIMEZONE"
          echo "✅ TIMEZONE set in Railway"
        else
          echo "ℹ️ TIMEZONE not set, using default"
        fi

    - name: Deploy to Railway
      run: |
        echo "🚀 Starting deployment to Railway..."
        
        # Get the main service name (usually the first web service)
        SERVICE_NAME=$(railway service list --json 2>/dev/null | jq -r '.[0].name' 2>/dev/null || echo "")
        
        if [ -n "$SERVICE_NAME" ] && [ "$SERVICE_NAME" != "null" ]; then
          echo "📋 Deploying to service: $SERVICE_NAME"
          railway up --service "$SERVICE_NAME" --detach
        else
          echo "⚠️ Could not determine service name, trying default deployment..."
          railway up --detach
        fi
        
        echo "✅ Deployment initiated successfully!"
        echo "🔗 Check your Railway dashboard for deployment status"
    
    - name: Deployment notification
      if: success()
      run: |
        echo "🎉 Discord Bot deployed successfully to Railway!"
        echo "The bot should be running and ready to serve gold price updates."
    
    - name: Deployment failure notification
      if: failure()
      run: |
        echo "❌ Deployment failed!"
        echo "Please check the logs above and your Railway dashboard for more details." 