name: Deploy Discord Bot to Railway

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install
    
    - name: Build project
      run: bun run build
    
    - name: Run tests
      run: bun test
      
  deploy:
    needs: test
    runs-on: ubuntu-latest
    # Only deploy on pushes to main branch (not PRs)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    # Use Railway's official CLI container for consistency
    container: ghcr.io/railwayapp/cli:latest
    
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
      CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
      TIMEZONE: ${{ secrets.TIMEZONE }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Verify Railway token
      run: |
        if [ -z "$RAILWAY_TOKEN" ]; then
          echo "‚ùå RAILWAY_TOKEN secret is not set"
          echo "Please add your Railway project token to GitHub repository secrets"
          exit 1
        fi
        echo "‚úÖ Railway token is configured"

    - name: Connect to Railway project
      run: |
        echo "üîó Connecting to Railway project..."
        # The RAILWAY_TOKEN should be automatically used by the CLI
        railway whoami || echo "‚ö†Ô∏è Could not verify Railway authentication"
        railway status || echo "‚ö†Ô∏è Could not get project status"
        
    - name: Check Railway project info
      run: |
        echo "üîç Checking Railway project information..."
        railway status || echo "‚ö†Ô∏è Could not get project status"
        railway --help || echo "‚ö†Ô∏è Could not get Railway help"

    - name: Set Railway Environment Variables
      run: |
        echo "üîß Setting environment variables in Railway..."
        
        # Set environment variables in Railway using modern syntax
        if [ -n "$DISCORD_TOKEN" ]; then
          railway variables --set DISCORD_TOKEN="$DISCORD_TOKEN" || railway env set DISCORD_TOKEN="$DISCORD_TOKEN" || echo "‚ö†Ô∏è Failed to set DISCORD_TOKEN"
          echo "‚úÖ DISCORD_TOKEN set in Railway"
        else
          echo "‚ö†Ô∏è DISCORD_TOKEN not found in GitHub Secrets"
        fi
        
        if [ -n "$CHANNEL_ID" ]; then
          railway variables --set CHANNEL_ID="$CHANNEL_ID" || railway env set CHANNEL_ID="$CHANNEL_ID" || echo "‚ö†Ô∏è Failed to set CHANNEL_ID"
          echo "‚úÖ CHANNEL_ID set in Railway"
        else
          echo "‚ö†Ô∏è CHANNEL_ID not found in GitHub Secrets"
        fi
        
        if [ -n "$TIMEZONE" ]; then
          railway variables --set TIMEZONE="$TIMEZONE" || railway env set TIMEZONE="$TIMEZONE" || echo "‚ö†Ô∏è Failed to set TIMEZONE"
          echo "‚úÖ TIMEZONE set in Railway"
        else
          echo "‚ÑπÔ∏è TIMEZONE not set, using default"
        fi

    - name: Deploy to Railway
      run: |
        echo "üöÄ Starting deployment to Railway..."
        
        # Check Railway CLI version and available commands
        echo "üîç Railway CLI version:"
        railway --version || echo "Could not get version"
        
        # Try the modern Railway deployment approach
        echo "üìã Attempting deployment..."
        
        # Method 1: Try railway up (modern syntax)
        if railway up --detach; then
          echo "‚úÖ Deployment successful using railway up!"
        else
          echo "‚ö†Ô∏è railway up failed, trying railway deploy..."
          
          # Method 2: Try railway deploy
          if railway deploy --detach; then
            echo "‚úÖ Deployment successful using railway deploy!"
          else
            echo "‚ö†Ô∏è railway deploy failed, trying without detach..."
            
            # Method 3: Try without detach flag
            if railway up; then
              echo "‚úÖ Deployment successful!"
            else
              echo "‚ùå All deployment methods failed"
              echo "Railway status:"
              railway status
              exit 1
            fi
          fi
        fi
        
        echo "‚úÖ Deployment completed!"
        echo "üîó Check your Railway dashboard for deployment status"
    
    - name: Deployment notification
      if: success()
      run: |
        echo "üéâ Discord Bot deployed successfully to Railway!"
        echo "The bot should be running and ready to serve gold price updates."
    
    - name: Deployment failure notification
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        echo "Please check the logs above and your Railway dashboard for more details." 